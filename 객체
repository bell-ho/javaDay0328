객체란 세상에 존재하는 모든것 프로그래밍에선 속성과 기능을 가지는 프로그램 단위

<<인간세계의 객체>>
사람
속성:키 몸무게
기능: 의사

체중계
속성 : 바늘,눈금
기능 : 몸무게측정

TV
속성 : 채널,사운드
기능 : 미디어 방출

<<프로그램세계>>
날씨 프로그램
속성 : 온도,미세먼지
기능: 날씨 예보

사칙연산 프로그램
속성 : + - * /
기능 : 연산기능
===============================================================================================================================================================
클래스는 속성(멤버변수) 와 기능(메소드)로 구성된다

멤버 변수(member variable) 또는 멤버 필드는 특정 객체와 연결된 변수의 하나이며, 해당 변수의 모든 메소드(멤버 함수)에 접근이 가능하다.

클래스의 실행은 무조건 메인클래스 부터 실행됨

메인 메소드에서 인스턴스를 생성 하는순간 일반클래스 안에있는 생성자가 호출됨 생성자는 여러개를 만들수 있다

실행할 메인클래스의 이름은 상관없다 하지만 메인메소드안에서의 인스턴스는 사용할 클래스로 이름을 맞추어 인스턴스를 만들어줘야 한다

일반클래스에서 생성자 : 생성자는 클래스이름과 동일한 메소드를 말함 반환형이없음 생성할때 필요한 기능을 넣으면됨

생성자를 만들때 매개변수를 넣어서 만들수 있는데 이렇게 하면 메인메소드에서 생성자를 만들때 매개변수를 전달하여 코딩을 줄임

생성자를 왜 쓸까?
이 생성자는 객체를 초기에 만들때 멤버변수를 바로 초기화할 수 있다는 장점이 있다. 
우리가 접근제어자를 맞이하면서부터 클래스의 필드에 접근하는게 굉장히 까다로워졌다. 
원래였으면 객체를 생성하자마자 점(.) 찍고 멤버변수를 적어 바로 사용했었는데 getter 메소드와 setter메소드를 거쳐야 하기 떄문이다.
그걸 간단하게 해결하는 것이  '생성자이다
생성자는 객체를 만들자마자 초기화할 수 있게 만들어주며, 어떤 생성자를 만들어 놨냐에 따라 다양하게 초기화 할 수 있다.
즉, 아무것도 없는 기본 생성자에서부터 파라미터 갯수가 필드의 갯수와 동등한 생성자까지 만들어 놓을 수 있고, 원하는 값을 초기화 할 수 있다.